package tree

import "github.com/charmbracelet/lipgloss/v2"

// StyleFunc allows the tree to be styled per item.
type StyleFunc func(children Nodes, i int) lipgloss.Style

// Styles contains style definitions for this tree component. By default, these
// values are generated by DefaultStyles.
type Styles struct {
	TreeStyle lipgloss.Style
	HelpStyle lipgloss.Style

	selectedNodeFunc      StyleFunc
	SelectedNodeStyle     lipgloss.Style
	SelectedNodeStyleFunc StyleFunc

	nodeFunc      StyleFunc
	NodeStyle     lipgloss.Style
	NodeStyleFunc StyleFunc

	rootNodeFunc      StyleFunc
	RootNodeStyle     lipgloss.Style
	RootNodeStyleFunc StyleFunc

	parentNodeFunc      StyleFunc
	ParentNodeStyle     lipgloss.Style
	ParentNodeStyleFunc StyleFunc

	CursorStyle lipgloss.Style

	EnumeratorStyle    lipgloss.Style
	IndenterStyle      lipgloss.Style
	OpenIndicatorStyle lipgloss.Style
}

// DefaultStyles returns a set of default style definitions for this tree
// component.
func DefaultStyles(isDark bool) (s Styles) {
	lightDark := lipgloss.LightDark(isDark)
	verySubduedColor := lightDark(lipgloss.Color("#DDDADA"), lipgloss.Color("#3C3C3C"))
	subduedColor := lightDark(lipgloss.Color("#9B9B9B"), lipgloss.Color("#5C5C5C"))

	s.TreeStyle = lipgloss.NewStyle()
	s.HelpStyle = lipgloss.NewStyle().PaddingTop(1)

	s.NodeStyle = lipgloss.NewStyle().Foreground(lightDark(lipgloss.Color("#9B9B9B"), lipgloss.Color("b0b0b0")))
	s.nodeFunc = func(_ Nodes, _ int) lipgloss.Style {
		return s.NodeStyle
	}

	s.SelectedNodeStyle = s.NodeStyle.Foreground(lipgloss.Color("212")).Bold(true)
	s.selectedNodeFunc = func(_ Nodes, _ int) lipgloss.Style {
		return s.SelectedNodeStyle
	}

	s.RootNodeStyle = lipgloss.NewStyle().
		Foreground(lightDark(lipgloss.Color("#EE6FF8"), lipgloss.Color("#EE6FF8")))
	s.rootNodeFunc = func(_ Nodes, _ int) lipgloss.Style {
		return s.RootNodeStyle
	}

	s.ParentNodeStyle = lipgloss.NewStyle().Foreground(lipgloss.Color("99"))
	s.parentNodeFunc = func(_ Nodes, _ int) lipgloss.Style {
		return s.ParentNodeStyle
	}

	s.CursorStyle = lipgloss.NewStyle().PaddingRight(1).Foreground(lipgloss.Color("212")).Bold(true)

	s.EnumeratorStyle = lipgloss.NewStyle().Foreground(verySubduedColor)
	s.IndenterStyle = lipgloss.NewStyle().Foreground(verySubduedColor)
	s.OpenIndicatorStyle = lipgloss.NewStyle().Foreground(subduedColor)

	return s
}

// DefaultDarkStyles returns a set of default styles for dark backgrounds.
func DefaultDarkStyles() Styles {
	return DefaultStyles(true)
}

// DefaultLightStyles returns a set of default styles for light backgrounds.
func DefaultLightStyles() Styles {
	return DefaultStyles(false)
}
